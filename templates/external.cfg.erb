# language and locale
d-i debian-installer/language string en
d-i debian-installer/country string AT
d-i debian-installer/locale string en_IE.UTF-8
d-i localechooser/supported-locales en_US.UTF-8, en_IE.UTF-8, de_AT.UTF-8 
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/xkb-keymap string en
d-i keyboard-configuration/layoutcode string en
d-i keyboard-configuration/modelcode string pc105
d-i console-keymaps-at/keymap string en-latin1-nodeadkeys

d-i netcfg/disable_autoconfig boolean true
d-i netcfg/choose_interface select eth0
d-i netcfg/get_hostname string $hostname
d-i netcfg/get_domain string esat
d-i netcfg/get_ipaddress string $interfaces['eth0']['ip_address']
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 192.1681.122.1
d-i netcfg/wireless_wep string
d-i netcfg/confirm_static boolean true

d-i hw-detect/load_firmware boolean true


# Setup the installation source
d-i mirror/country string manual
d-i mirror/http/mirror select mirror.hetzner.de
d-i mirror/http/hostname string mirror.hetzner.de
d-i mirror/http/directory string /ubuntu/packages

d-i mirror/suite string precise

d-i clock-setup/utc boolean true
d-i time/zone string UTC
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string europe.pool.ntp.org


# erase partions
d-i partman/early_command /bin/dd if=/dev/zero of=/dev/vda bs=1M count=512
# Then, create an LVM setup
d-i partman-auto/disk string /dev/vda
d-i partman-auto-lvm/guided_size string max
d-i partman-auto-lvm/new_vg_name string vm0
d-i partman-auto-lvm/no_boot boolean true
d-i partman-auto/method string lvm
d-i partman-auto/purge_lvm_from_device boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/default_filesystem string ext4
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-auto/choose_recipe select root-swap
d-i partman-auto/expert_recipe string root-swap ::  \
512 1024 200% linux-swap method{ swap } \
format{ } \$lvmok{ } lv_name{ lv_swap } \
. \
1024 10000 102400000 ext4 method{ lvm } \
\$lvmok{ } mountpoint{ / } lv_name{ lv_root } \
format{ } use_filesystem{ } filesystem{ ext4 } \
options/relatime{ noatime } \
.

# create root user
d-i passwd/make-user boolean false
d-i passwd/root-login boolean true
d-i passwd/root-password password <%= @defaultrootpw %>
d-i passwd/root-password-again password <%= @defaultrootpw %>


# enable ALL THE Ubuntu repos (universe, multiverse, restricted, extras, backports)
# but since hetzner doesn't have source repos, don't enable those.
d-i apt-setup/universe boolean true
d-i apt-setup/universe/source boolean false
d-i apt-setup/multiverse boolean true
d-i apt-setup/multiverse/source boolean false
d-i apt-setup/restricted boolean true
d-i apt-setup/restricted/source boolean false
d-i apt-setup/extras boolean true
d-i apt-setup/extras/source boolean false
d-i apt-setup/backports boolean true

# Add git-core ppa:
d-i apt-setup/local0/repository string \
    http://ppa.launchpad.net/git-core/ppa/ubuntu precise main
d-i apt-setup/local0/comment git-core ppa
d-i apt-setup/local0/source boolean false
d-i apt-setup/local0/key string \
    http://keyserver.ubuntu.com:11371/pks/lookup?search=0xE1DD270288B4E6030699E45FA1715D88E1DF1F24&op=get

# Add augeas ppa:
d-i apt-setup/local1/repository string \
    deb http://ppa.launchpad.net/raphink/augeas/ubuntu precise main
d-i apt-setup/local1/comment Raphink's Augeas ppa
d-i apt-setup/local1/source boolean false
d-i apt-setup/local1/key string \
    http://keyserver.ubuntu.com:11371/pks/lookup?search=0xCF6D4DF76A7B62DDCE6C3D99EEDBF1C2AE498453&op=get

# PostgreSQL \$latest apt repo
d-i apt-setup/local2/repository string \
    deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main
d-i apt-setup/local2/comment PostgreSQL's Apt Repo
d-i apt-setup/local2/source boolean false
d-i apt-setup/local2/key string \
    http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc

# Add our own repo!
d-i apt-setup/local3/repository string \
    http://pkg.esotericsystems.at precise main testing
d-i apt-setup/local3/comment Brainsware internal APT repo
d-i apt-setup/local3/source boolean false
d-i apt-setup/local3/key string \
    http://pkg.esotericsystems.at/pubkey.gpg


tasksel tasksel/first multiselect standard
d-i pkgsel/include string openssh-server build-essential git lsb-release chrony vim-nox acpid python-software-properties \
                          byobu tmux curl zsh exuberant-ctags make htop sysstat linux-tools-lts-saucy virt-what \
                          puppet rubygem-facter rubygem-hiera rubygem-json-pure rubygem-ruby-shadow rubygem-ruby-augeas \
                          rubygem-puppet-lint libaugeas0 augeas-lenses augeas-tools openjdk-7-jre-headless ubuntu-extras-keyring
d-i pkgsel/language-packs multiselect en
d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/install-language-support boolean false
d-i pkgsel/update-policy select unattended-upgrades
d-i pkgsel/updatedb boolean true

# create static network configuration

#set $lo = '# Loopback device:\\nauto lo\\niface lo inet loopback\\n'
# next, the external interface:
#set $eth1 = '\\n# device: eth1\\nauto  eth1\\niface eth1 inet static\\n    address %s\\n    netmask 255.255.255.255\\n    gateway %s\\n    pointopoint %s' % ($interfaces['eth1']['ip_address'], $gateway, $gateway)
# Finally, create the internal network interface:
# update the internal Interface to include IPv6 and IPv4
#set $eth0 = '\\n# device: eth0\\nauto  eth0\\niface eth0 inet static\\n    address %s\\n    netmask   255.255.255.0\\n' % ($interfaces['eth0']['ip_address'])
#set $eth0 += '\\niface eth0 inet6 static\\n    address %s\\n    netmask    112\\n' % ($interfaces['eth0']['ipv6_address'])
#set $interfaces = $lo+$eth0+$eth1

# extract host from fqdn:
#set $host = $hostname.split('.')[0]

#set $path = 'PATH="/opt/bw/bin:/opt/bw/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games"'

# really, really dist-upgrade
d-i preseed/late_command string in-target apt-get update ; \
    in-target apt-get -y dist-upgrade ; \
    in-target apt-get -y autoremove ; \
    in-target apt-get autoclean ; \
    in-target apt-get clean ; \
    /bin/echo -e '$interfaces' > /target/etc/network/interfaces ; \
    /bin/echo -e '$host' > /target/etc/hostname ; \
    /bin/rm /target/etc/resolvconf/resolv.conf.d/base ; \
    /usr/bin/wget -O/target/etc/resolvconf/resolv.conf.d/base http://$http_server/cblr/ks_mirror/config/resolv.conf ; \
    /bin/sed -i -e 's/ubuntu/$host $hostname/' /target/etc/hosts ; \
    /bin/echo -e '$path' > /target/etc/environment ; \
    /bin/mkdir -p /target/etc/puppet ; \
    /bin/mkdir -p /target/etc/facter/facts.d ; \
    /bin/echo 'vm_profile=external' > /target/etc/facter/facts.d/vm_profile.txt ; \
    /usr/bin/wget -P/target/etc/puppet http://$http_server/cblr/ks_mirror/config/puppet.conf ; \
    /usr/bin/wget -O/target/root/id_rsa http://$http_server/cblr/ks_mirror/config/root_id_rsa ; \
    /bin/chmod 400 /target/root/id_rsa ; \
    /usr/bin/wget -O/target/root/id_rsa.pub http://$http_server/cblr/ks_mirror/config/root_id_rsa.pub ; \
    /usr/bin/wget -P/target/usr/local/sbin http://$http_server/cblr/ks_mirror/config/post-provision.sh ; \
    /usr/bin/wget -P/target/etc/facter/facts.d http://$http_server/cblr/ks_mirror/config/vm_parent.txt ; \
    /bin/chmod +x /target/usr/local/sbin/post-provision.sh


# Verbose output and no boot splash screen.
d-i	debian-installer/quiet	boolean false
d-i	debian-installer/splash	boolean false

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
# XXX here we hardcode two of my favourite options: nomodeset, because fuck
# graphix on the server, and elevator=deadline -- because the default scheduler is arse.
d-i debian-installer/add-kernel-opts string nomodeset elevator=deadline
d-i finish-install/reboot_in_progress note

# This will power off the machine instead of just halting it.
# The reason we do this is so we can modify the CPU configuration
d-i debian-installer/exit/poweroff boolean true
