#  Copyright 2016 Brainsware
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# language and locale
d-i debian-installer/language string en
d-i debian-installer/country string AT
d-i debian-installer/locale string en_IE.UTF-8
d-i localechooser/supported-locales en_US.UTF-8, en_IE.UTF-8, de_AT.UTF-8
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/xkb-keymap string en
d-i keyboard-configuration/layoutcode string en
d-i keyboard-configuration/modelcode string pc105
d-i console-keymaps-at/keymap string en-latin1-nodeadkeys

#set $hostname = $hostname or $system_name
#set $gateway6 = $interfaces['eth0']['ipv6_default_gateway']

d-i preseed/early_command string ip route replace default via $gateway6 dev eth0

d-i netcfg/dhcp_timeout string 10
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string $hostname
d-i netcfg/get_domain string esat
d-i netcfg/get_ipaddress string $interfaces['eth0']['ipv6_address']
d-i netcfg/get_netmask string 64
d-i netcfg/get_gateway string $interfaces['eth0']['ipv6_default_gateway']
d-i netcfg/wireless_wep string
d-i netcfg/confirm_static boolean true

d-i hw-detect/load_firmware boolean true


# Setup the installation source
d-i mirror/country string manual
d-i mirror/http/mirror select mirror.hetzner.de
d-i mirror/http/hostname string mirror.hetzner.de
d-i mirror/http/directory string /ubuntu/packages

d-i mirror/suite string $os_version

d-i clock-setup/utc boolean true
d-i time/zone string UTC
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string europe.pool.ntp.org

d-i partman-auto/disk string /dev/vda
d-i partman-auto/method string regular
d-i partman-auto/purge_lvm_from_device boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/default_filesystem string ext4
d-i partman-basicfilesystems/no_swap boolean false
d-i partman-auto/expert_recipe string justroot :: 1000 50 -1 ext4 \
     $primary{ } $bootable{ } method{ format } \
     format{ } use_filesystem{ } filesystem{ ext4 } \
     mountpoint{ / } \
    .
d-i partman-auto/choose_recipe select justoot
# create root user
d-i passwd/make-user boolean false
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password $default_password_crypted


# enable ALL THE Ubuntu repos (universe, multiverse, restricted, extras, backports, updates)
d-i apt-setup/universe boolean true
d-i apt-setup/universe/source boolean false
d-i apt-setup/multiverse boolean true
d-i apt-setup/multiverse/source boolean false
d-i apt-setup/restricted boolean true
d-i apt-setup/restricted/source boolean false
d-i apt-setup/extras boolean true
d-i apt-setup/extras/source boolean false
d-i apt-setup/backports boolean true
d-i apt-setup/updates boolean true
d-i apt-setup/updates/source boolean false

# Add puppetlabs' repo
d-i apt-setup/local0/repository string \
    http://apt.puppetlabs.com $os_version PC1
d-i apt-setup/local0/comment Puppetlabs' APT repository
d-i apt-setup/local0/source boolean false
d-i apt-setup/local0/key string \
    http://apt.puppetlabs.com/pubkey.gpg


tasksel tasksel/first multiselect standard
d-i pkgsel/include string openssh-server build-essential git lsb-release ntp vim-nox acpid software-properties-common \
                          byobu tmux curl fish exuberant-ctags make htop sysstat linux-tools-generic-lts-trusty \
                          puppet-agent ubuntu-extras-keyring
d-i pkgsel/language-packs multiselect en
#d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/install-language-support boolean false
d-i pkgsel/update-policy select unattended-upgrades
d-i pkgsel/updatedb boolean true

# create static network configuration

#set $lo = '# Loopback device:\\nauto lo\\niface lo inet loopback\\n'
# next, set the primary ~internal~ interface
#set $eth0 = '\\n# device: eth0\\nauto  eth0\\niface eth0 inet6 static\\n    address %s\\n    netmask 64\\n    gateway %s\\n' % ($interfaces['eth0']['ipv6_address'], $gateway6)
#set $interfaces = $lo+$eth0

# extract host from fqdn:
#set $host = $hostname.split('.')[0]

d-i preseed/late_command string \
    in-target apt-get update ; \
    in-target apt-get -y dist-upgrade ; \
    in-target apt-get -y autoremove ; \
    in-target apt-get autoclean ; \
    in-target apt-get clean ; \
    /bin/echo -e '$interfaces' > /target/etc/network/interfaces ; \
    cp /target/etc/network/interfaces /etc/network/interfaces ; \
    cp /target/etc/network/interfaces /run/network/interfaces ; \
    chattr +i /target/etc/network/interfaces /etc/network/interfaces  /run/network/interfaces ; \
    /bin/echo -e '$host' > /target/etc/hostname ; \
    /bin/rm /target/etc/resolvconf/resolv.conf.d/base ; \
    /usr/bin/wget -O/target/etc/resolvconf/resolv.conf.d/base http://$http_server/cblr/ks_mirror/config/resolv.internal.conf ; \
    /bin/sed -r -i -e '/nameserver [0-9]+\./d' /target/etc/resolvconf/resolv.conf.d/base ; \
    /bin/sed -i -e 's/ubuntu/$host $hostname/' /target/etc/hosts ; \
    /bin/mkdir -p /target/etc/facter/facts.d ; \
    /bin/mkdir -p /target/etc/puppetlabs/r10k/ /target/etc/puppetlabs/code/ ; \
    /bin/mkdir -p /target/root/.ssh ; \
    /bin/echo 'vm_profile=internal' > /target/etc/facter/facts.d/vm_profile.txt ; \
    /bin/echo 'role=$comment' > /target/etc/facter/facts.d/role.txt ; \
    /usr/bin/wget -O/target/etc/puppetlabs/r10k/r10k.yaml http://$http_server/cblr/ks_mirror/config/r10k.yaml ; \
    /usr/bin/wget -O/target/etc/ssh/ssh_known_host http://$http_server/cblr/ks_mirror/config/ssh_known_hosts ; \
    /usr/bin/wget -O/target/root/.ssh/id_rsa http://$http_server/cblr/ks_mirror/config/root_id_rsa ; \
    /bin/chmod 400 /target/root/.ssh/id_rsa ; \
    /usr/bin/wget -O/target/root/.ssh/id_rsa.pub http://$http_server/cblr/ks_mirror/config/root_id_rsa.pub ; \
    cp /target/root/.ssh/id_rsa.pub /target/root/.ssh/authorized_keys ; \
    /usr/bin/wget -P/target/usr/local/sbin http://$http_server/cblr/ks_mirror/config/post-provision.sh ; \
    /usr/bin/wget -P/target/etc/facter/facts.d http://$http_server/cblr/ks_mirror/config/vm_parent.txt ; \
    /bin/chmod +x /target/usr/local/sbin/post-provision.sh

# Verbose output and no boot splash screen.
d-i	debian-installer/quiet	boolean false
d-i	debian-installer/splash	boolean false

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
# XXX here we hardcode two of my favourite options: nomodeset, because fuck
# graphix on the server, and elevator=deadline -- because the default scheduler is arse.
d-i debian-installer/add-kernel-opts string nomodeset elevator=deadline
d-i finish-install/reboot_in_progress note

# This will power off the machine instead of just halting it.
# The reason we do this is so we can modify the CPU configuration
d-i debian-installer/exit/poweroff boolean true
